*** fs/exec.c	2011-05-19 06:06:34.000000000 +0200
--- fs/exec.c	2011-06-11 15:37:59.455999543 +0200
***************
*** 56,61 ****
--- 56,63 ----
  #include <linux/pipe_fs_i.h>
  #include <linux/oom.h>
  
+ #include <trace/events/fs.h>
+ 
  #include <asm/uaccess.h>
  #include <asm/mmu_context.h>
  #include <asm/tlb.h>
***************
*** 743,748 ****
--- 745,752 ----
  
  	fsnotify_open(file);
  
+ 	trace_open_exec(name);
+ 
  	err = deny_write_access(file);
  	if (err)
  		goto exit;

*** fs/open.c	2011-05-19 06:06:34.000000000 +0200
--- fs/open.c	2011-06-11 15:39:54.135999499 +0200
***************
*** 33,38 ****
--- 33,41 ----
  
  #include "internal.h"
  
+ #define CREATE_TRACE_POINTS
+ #include <trace/events/fs.h>
+ 
  int do_truncate(struct dentry *dentry, loff_t length, unsigned int time_attrs,
  	struct file *filp)
  {
***************
*** 1005,1010 ****
--- 1008,1014 ----
  			} else {
  				fsnotify_open(f);
  				fd_install(fd, f);
+ 				trace_do_sys_open(tmp, flags, mode);
  			}
  		}
  		putname(tmp);


*** /dev/null	2011-06-11 15:17:16.130987953 +0200
--- include/trace/events/fs.h	2011-06-11 15:41:12.270999470 +0200
***************
*** 0 ****
--- 1,71 ----
+ #undef TRACE_SYSTEM
+ #define TRACE_SYSTEM fs
+ 
+ #if !defined(_TRACE_FS_H) || defined(TRACE_HEADER_MULTI_READ)
+ #define _TRACE_FS_H
+ 
+ #include <linux/fs.h>
+ #include <linux/tracepoint.h>
+ 
+ TRACE_EVENT(do_sys_open,
+ 
+  TP_PROTO(char *filename, int flags, int mode),
+ 
+  TP_ARGS(filename, flags, mode),
+ 
+  TP_STRUCT__entry(
+  __string( filename, filename )
+  __field( int, flags )
+  __field( int, mode )
+  ),
+ 
+  TP_fast_assign(
+  __assign_str(filename, filename);
+  __entry->flags = flags;
+  __entry->mode = mode;
+  ),
+ 
+  TP_printk("\"%s\" %x %o",
+  __get_str(filename), __entry->flags, __entry->mode)
+ );
+ 
+ TRACE_EVENT(uselib,
+ 
+  TP_PROTO(char *filename),
+ 
+  TP_ARGS(filename),
+ 
+  TP_STRUCT__entry(
+  __string( filename, filename )
+  ),
+ 
+  TP_fast_assign(
+  __assign_str(filename, filename);
+  ),
+ 
+  TP_printk("\"%s\"",
+  __get_str(filename))
+ );
+ 
+ TRACE_EVENT(open_exec,
+ 
+  TP_PROTO(char *filename),
+ 
+  TP_ARGS(filename),
+ 
+  TP_STRUCT__entry(
+  __string( filename, filename )
+  ),
+ 
+  TP_fast_assign(
+  __assign_str(filename, filename);
+  ),
+ 
+  TP_printk("\"%s\"",
+  __get_str(filename))
+ );
+ 
+ #endif /* _TRACE_FS_H */
+ 
+ /* This part must be outside protection */
+ #include <trace/define_trace.h>
